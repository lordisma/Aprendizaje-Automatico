setwd("E:/Projects/Aprendizaje-Automatico/practica3")
source('E:/Projects/Aprendizaje-Automatico/practica3/Practica_3.R')
install.packages("RcppRoll")
source('E:/Projects/Aprendizaje-Automatico/practica3/Practica_3.R')
install.packages("ddalpha")
source('E:/Projects/Aprendizaje-Automatico/practica3/Practica_3.R')
install.packages("dimRed")
source('E:/Projects/Aprendizaje-Automatico/practica3/Practica_3.R')
install.packages("gower")
source('E:/Projects/Aprendizaje-Automatico/practica3/Practica_3.R')
summary(opt.tra)
describe(opt.tra)
labels = opt.tra[,"X0.26"]
colnames(opt.tra)
match(colnames(opt.tra),colnames(opt.tra))
colnames(opt.tra)!= "X0.26"
colnames(opt.tra)[colnames(opt.tra)!= "X0.26"]
View(opt.tra)
names.opt = colnames(opt.tra)
names.opt
match(names.opt[names.opt!="X0.26"], colnames(opt.tra))
predict.opt = opt.tra[,match(names.opt[names.opt!="X0.26"], colnames(opt.tra))]
predict.opt = opt.tra[,-match(names.opt[names.opt!="X0.26"], colnames(opt.tra))]
predict.opt = opt.tra[,-match(names.opt, colnames(opt.tra))]
predict.opt = opt.tra[,match(names.opt, colnames(opt.tra))]
predict.opt = opt.tra[,-match(names.opt, colnames(opt.tra))]
predict.opt = opt.tra[,-match(names.opt[names.opt!="X0.26"], colnames(opt.tra))]
predict.opt = opt.tra[,match(names.opt[names.opt!="X0.26"], colnames(opt.tra))]
cv.opt <- createFolds(labels, k = 10, returnTrain = TRUE)
colnames(cv.opt)
summary(cv.opt)
cv.opt[1]
source('E:/Projects/Aprendizaje-Automatico/practica3/Practica_3.R')
source('E:/Projects/Aprendizaje-Automatico/practica3/Practica_3.R')
cv.opt[1]
as.array(cv.opt[1])
cv.opt[1][1]
cv.opt[1][,2]
cv.opt[1][2]
cv.opt[1][1]
cv.opt[1][2,]
cv.opt[1][2]
cv.opt[1,2]
cv.opt[1,1]
cv.opt[1,]
cv.opt$Fold1
source('E:/Projects/Aprendizaje-Automatico/practica3/Practica_3.R')
labels
labels(c(23,55,700))
labels[c(23,55,700)]
source('E:/Projects/Aprendizaje-Automatico/practica3/Practica_3.R')
library(glmnet)
grid <- expand.grid(alpha = c(0,.1,.2,.3,.4,.5,.6,.7,.8,1),
lambda = seq(.01,.2, length.out = 20))
View(grid)
?trainControl
?train
predict.opt = opt.tra[,match(names.opt, colnames(opt.tra))]
library(caret)
library(glmnet)
#Lectura de los datos, Falta introducir la lectura del conjunto de test
opt.tra = read.csv("optdigits_tra.csv")
airfoil.tra = read.csv("airfoil_self_noise.csv")
#Configuracion de parémetros
seed = 674155357
set.seed(seed = seed)
numberOfPartes = 5
#Creacion de variables iniciales
#Describimos los datos del train
summary(opt.tra)
summary(airfoil.tra)
#Division de los datos en etiquetas y carasterísticas y iniciamos el cross validation
labels = opt.tra[,"X0.26"]
names.opt = colnames(opt.tra)
predict.opt = opt.tra[,match(names.opt, colnames(opt.tra))]
cv.opt <- createFolds(labels, k = numberOfPartes, returnTrain = TRUE)
source('E:/Projects/Aprendizaje-Automatico/practica3/Practica_3.R')
View(glmnet_fit)
?train
source('E:/Projects/Aprendizaje-Automatico/practica3/Practica_3.R')
source('E:/Projects/Aprendizaje-Automatico/practica3/Practica_3.R')
